================================================================================
Integers
================================================================================

123;
-123;
!123;

--------------------------------------------------------------------------------

(program
  (expression_statement
    (integer))
  (expression_statement
    (prefix_expression
      (integer)))
  (expression_statement
    (prefix_expression
      (integer))))


================================================================================
Strings
================================================================================

"hello world";
// this is a comment

--------------------------------------------------------------------------------

(program
  (expression_statement
    (string))
  (comment))

================================================================================
Booleans
================================================================================

true;
false;
!true;

--------------------------------------------------------------------------------

(program
  (expression_statement
    (true))
  (expression_statement
    (false))
  (expression_statement
    (prefix_expression
     (true))))


================================================================================
Function Literals
================================================================================

fn(x, y) { x + y }
fn() { return "hello"; }
fn(x) { x }

--------------------------------------------------------------------------------
(program
  (expression_statement
    (function_literal
      parameters: (parameters
        (identifier)
        (identifier))
      body: (block_statement
        (expression_statement
          (infix_expression
            left: (identifier)
            right: (identifier))))))
  (expression_statement
    (function_literal
      parameters: (parameters)
      body: (block_statement
        (return_statement
          (string)))))
  (expression_statement
    (function_literal
      parameters: (parameters
        (identifier))
      body: (block_statement
        (expression_statement
          (identifier))))))


================================================================================
Array Literals
================================================================================

[];
[1, "foo", true];
[[1]];

--------------------------------------------------------------------------------

(program
  (expression_statement
    (array
      elements: (elements)))
  (expression_statement
    (array
      elements: (elements
        (integer)
        (string)
        (true))))
  (expression_statement
    (array
      elements: (elements
        (array
          elements: (elements
            (integer)))))))

================================================================================
Hash Literals
================================================================================

{};
{"foo": 1};
{true: {1: false}};

--------------------------------------------------------------------------------
(program
  (expression_statement
    (hash))
  (expression_statement
    (hash
      (pair
        key: (string)
        value: (integer))))
  (expression_statement
    (hash
      (pair
        key: (true)
        value: (hash
          (pair
            key: (integer)
            value: (false)))))))
