================================================================================
Math Operators
================================================================================

true == 1;
15 / 3;
foo + "bar";
3 + 4; 5 * 3;

--------------------------------------------------------------------------------
(program
  (expression_statement
    (infix_expression
      left: (true)
      right: (integer)))
  (expression_statement
    (infix_expression
      left: (integer)
      right: (integer)))
  (expression_statement
    (infix_expression
      left: (identifier)
      right: (string)))
  (expression_statement
    (infix_expression
      left: (integer)
      right: (integer)))
  (expression_statement
    (infix_expression
      left: (integer)
      right: (integer))))


================================================================================
Operator Precedence
================================================================================

-a + 1;
!-20;
a + b + c;
a + b / c;
(5 + 5) * 2;
4 + 1 == 5;
3 > 5 != true;
-(5 + 5);

--------------------------------------------------------------------------------
(program
  (expression_statement
    (infix_expression
     (prefix_expression
       (identifier))
     (integer)))
  (expression_statement
    (prefix_expression
      (prefix_expression
        (integer))))
  (expression_statement
    (infix_expression
      (infix_expression
        (identifier)
        (identifier))
      (identifier)))
  (expression_statement
    (infix_expression
      (identifier)
      (infix_expression
        (identifier)
        (identifier))))
  (expression_statement
    (infix_expression
      (parenthesized_expression
        (infix_expression
          (integer)
          (integer)))
      (integer)))
  (expression_statement
    (infix_expression
      (infix_expression
        (integer)
        (integer))
      (integer)))
  (expression_statement
    (infix_expression
      (infix_expression
        (integer)
        (integer))
      (true)))
  (expression_statement
    (prefix_expression
      (parenthesized_expression
        (infix_expression
          (integer)
          (integer)))))
)
